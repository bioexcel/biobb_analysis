{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://bioexcel.eu/biobb_analysis/json_schemas/1.0/gmx_trjconv_str_ens",
    "name": "biobb_analysis GMXTrjConvStrEns",
    "title": "Wrapper of the GROMACS trjconv module for extracting an ensemble of frames containing a selection of atoms from GROMACS compatible trajectory files.",
    "description": "GROMACS trjconv module can convert trajectory files in many ways. See the GROMACS trjconv official documentation for further information.",
    "type": "object",
    "info": {
        "wrapped_software": {
            "name": "GROMACS trjconv",
            "version": ">=2024.5",
            "license": "LGPL 2.1"
        },
        "ontology": {
            "name": "EDAM",
            "schema": "http://edamontology.org/EDAM.owl"
        }
    },
    "required": [
        "input_traj_path",
        "input_top_path",
        "output_str_ens_path"
    ],
    "properties": {
        "input_traj_path": {
            "type": "string",
            "description": "Path to the GROMACS trajectory file",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_analysis/raw/master/biobb_analysis/test/data/gromacs/trajectory.trr",
            "enum": [
                ".*\\.xtc$",
                ".*\\.trr$",
                ".*\\.cpt$",
                ".*\\.gro$",
                ".*\\.g96$",
                ".*\\.pdb$",
                ".*\\.tng$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.xtc$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_3875"
                },
                {
                    "extension": ".*\\.trr$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_3910"
                },
                {
                    "extension": ".*\\.cpt$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_2333"
                },
                {
                    "extension": ".*\\.gro$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_2033"
                },
                {
                    "extension": ".*\\.g96$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_2033"
                },
                {
                    "extension": ".*\\.pdb$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_1476"
                },
                {
                    "extension": ".*\\.tng$",
                    "description": "Path to the GROMACS trajectory file",
                    "edam": "format_3876"
                }
            ]
        },
        "input_top_path": {
            "type": "string",
            "description": "Path to the GROMACS input topology file",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_analysis/raw/master/biobb_analysis/test/data/gromacs/topology.tpr",
            "enum": [
                ".*\\.tpr$",
                ".*\\.gro$",
                ".*\\.g96$",
                ".*\\.pdb$",
                ".*\\.brk$",
                ".*\\.ent$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.tpr$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_2333"
                },
                {
                    "extension": ".*\\.gro$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_2033"
                },
                {
                    "extension": ".*\\.g96$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_2033"
                },
                {
                    "extension": ".*\\.pdb$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_1476"
                },
                {
                    "extension": ".*\\.brk$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_2033"
                },
                {
                    "extension": ".*\\.ent$",
                    "description": "Path to the GROMACS input topology file",
                    "edam": "format_1476"
                }
            ]
        },
        "input_index_path": {
            "type": "string",
            "description": "Path to the GROMACS index file",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_analysis/raw/master/biobb_analysis/test/data/gromacs/index.ndx",
            "enum": [
                ".*\\.ndx$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ndx$",
                    "description": "Path to the GROMACS index file",
                    "edam": "format_2033"
                }
            ]
        },
        "output_str_ens_path": {
            "type": "string",
            "description": "Path to the output file",
            "filetype": "output",
            "sample": "https://github.com/bioexcel/biobb_analysis/raw/master/biobb_analysis/test/reference/gromacs/ref_trjconv.str.ens.zip",
            "enum": [
                ".*\\.zip$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.zip$",
                    "description": "Path to the output file",
                    "edam": "format_3987"
                }
            ]
        },
        "properties": {
            "type": "object",
            "properties": {
                "selection": {
                    "type": "string",
                    "default": "System",
                    "wf_prop": false,
                    "description": "Group where the trjconv will be performed. If **input_index_path** provided, check the file for the accepted values. ",
                    "enum": [
                        "System",
                        "Protein",
                        "Protein-H",
                        "C-alpha",
                        "Backbone",
                        "MainChain",
                        "MainChain+Cb",
                        "MainChain+H",
                        "SideChain",
                        "SideChain-H",
                        "Prot-Masses",
                        "non-Protein",
                        "Water",
                        "SOL",
                        "non-Water",
                        "Ion",
                        "NA",
                        "CL",
                        "Water_and_ions",
                        "DNA",
                        "RNA",
                        "Protein_DNA",
                        "Protein_RNA",
                        "Protein_DNA_RNA",
                        "DNA_RNA"
                    ],
                    "property_formats": [
                        {
                            "name": "System",
                            "description": "all atoms in the system"
                        },
                        {
                            "name": "Protein",
                            "description": "all protein atoms"
                        },
                        {
                            "name": "Protein-H",
                            "description": "protein atoms excluding hydrogens"
                        },
                        {
                            "name": "C-alpha",
                            "description": "C-alpha atoms"
                        },
                        {
                            "name": "Backbone",
                            "description": "protein backbone atoms: N; C-alpha and C"
                        },
                        {
                            "name": "MainChain",
                            "description": "protein main chain atoms: N; C-alpha; C and O; including oxygens in C-terminus"
                        },
                        {
                            "name": "MainChain+Cb",
                            "description": "protein main chain atoms including C-beta"
                        },
                        {
                            "name": "MainChain+H",
                            "description": "protein main chain atoms including backbone amide hydrogens and hydrogens on the N-terminus"
                        },
                        {
                            "name": "SideChain",
                            "description": "protein side chain atoms: that is all atoms except N; C-alpha; C; O; backbone amide hydrogens and oxygens in C-terminus and hydrogens on the N-terminus"
                        },
                        {
                            "name": "SideChain-H",
                            "description": "protein side chain atoms excluding all hydrogens"
                        },
                        {
                            "name": "Prot-Masses",
                            "description": "protein atoms excluding dummy masses"
                        },
                        {
                            "name": "non-Protein",
                            "description": "all non-protein atoms"
                        },
                        {
                            "name": "Water",
                            "description": "water molecules"
                        },
                        {
                            "name": "SOL",
                            "description": "water molecules"
                        },
                        {
                            "name": "non-Water",
                            "description": "anything not covered by the Water group"
                        },
                        {
                            "name": "Ion",
                            "description": "any name matching an Ion entry in residuetypes.dat"
                        },
                        {
                            "name": "NA",
                            "description": "all NA atoms"
                        },
                        {
                            "name": "CL",
                            "description": "all CL atoms"
                        },
                        {
                            "name": "Water_and_ions",
                            "description": "combination of the Water and Ions groups"
                        },
                        {
                            "name": "DNA",
                            "description": "all DNA atoms"
                        },
                        {
                            "name": "RNA",
                            "description": "all RNA atoms"
                        },
                        {
                            "name": "Protein_DNA",
                            "description": "all Protein-DNA complex atoms"
                        },
                        {
                            "name": "Protein_RNA",
                            "description": "all Protein-RNA complex atoms"
                        },
                        {
                            "name": "Protein_DNA_RNA",
                            "description": "all Protein-DNA-RNA complex atoms"
                        },
                        {
                            "name": "DNA_RNA",
                            "description": "all DNA-RNA complex atoms"
                        }
                    ]
                },
                "skip": {
                    "type": "integer",
                    "default": 1,
                    "wf_prop": false,
                    "description": "Only write every nr-th frame.",
                    "min": 0,
                    "max": 10000,
                    "step": 1
                },
                "start": {
                    "type": "integer",
                    "default": 0,
                    "wf_prop": false,
                    "description": "Time of first frame to read from trajectory (default unit ps).",
                    "min": 0,
                    "max": 10000,
                    "step": 1
                },
                "end": {
                    "type": "integer",
                    "default": 0,
                    "wf_prop": false,
                    "description": "Time of last frame to read from trajectory (default unit ps).",
                    "min": 0,
                    "max": 10000,
                    "step": 1
                },
                "dt": {
                    "type": "integer",
                    "default": 0,
                    "wf_prop": false,
                    "description": "Only write frame when t MOD dt = first time (ps).",
                    "min": 0,
                    "max": 10000,
                    "step": 1
                },
                "output_name": {
                    "type": "string",
                    "default": "output",
                    "wf_prop": false,
                    "description": "File name for ensemble of output files."
                },
                "output_type": {
                    "type": "string",
                    "default": "pdb",
                    "wf_prop": false,
                    "description": "File type for ensemble of output files. ",
                    "enum": [
                        "gro",
                        "g96",
                        "pdb"
                    ],
                    "property_formats": [
                        {
                            "name": "gro",
                            "description": "Contains a molecular structure in Gromos87 format"
                        },
                        {
                            "name": "g96",
                            "description": "Can be a GROMOS-96 initial/final configuration file or a coordinate trajectory file or a combination of both"
                        },
                        {
                            "name": "pdb",
                            "description": "Molecular structure files in the protein databank file format"
                        }
                    ]
                },
                "binary_path": {
                    "type": "string",
                    "default": "gmx",
                    "wf_prop": false,
                    "description": "Path to the GROMACS executable binary."
                },
                "remove_tmp": {
                    "type": "boolean",
                    "default": true,
                    "wf_prop": true,
                    "description": "Remove temporal files."
                },
                "restart": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": true,
                    "description": "Do not execute if output files exist."
                },
                "sandbox_path": {
                    "type": "string",
                    "default": "./",
                    "wf_prop": true,
                    "description": "Parent path to the sandbox directory."
                },
                "container_path": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Container path definition."
                },
                "container_image": {
                    "type": "string",
                    "default": "gromacs/gromacs:2022.2",
                    "wf_prop": false,
                    "description": "Container image definition."
                },
                "container_volume_path": {
                    "type": "string",
                    "default": "/tmp",
                    "wf_prop": false,
                    "description": "Container volume path definition."
                },
                "container_working_dir": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Container working directory definition."
                },
                "container_user_id": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Container user_id definition."
                },
                "container_shell_path": {
                    "type": "string",
                    "default": "/bin/bash",
                    "wf_prop": false,
                    "description": "Path to default shell inside the container."
                }
            }
        }
    },
    "additionalProperties": false
}